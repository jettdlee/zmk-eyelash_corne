#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&soft_off { hold-time-ms = <2000>; };

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        softoff {
            bindings = <&soft_off>;
            key-positions = <1 15 29>;
        };

        board_layer_left {
            bindings = <&mo 5>;
            key-positions = <43 42 44>;
        };

        board_layer_right {
            bindings = <&mo 5>;
            key-positions = <46 47 45>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer_win {
            display-name = "Win";
            bindings = <
&kp ESCAPE      &kp Q  &kp W  &kp E      &kp R         &kp T                               &kp UP_ARROW               &kp BACKSPACE    &kp Y          &kp U  &kp I      &kp O       &kp P
&kp TAB         &kp A  &kp S  &kp D      &kp F         &kp G                     &kp LEFT  &kp ENTER       &kp RIGHT  &kp ENTER        &kp H          &kp J  &kp K      &kp L       &kp SEMICOLON
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C      &kp V         &kp B        &kp SPACE              &kp DOWN_ARROW             &kp RIGHT_SHIFT  &kp N          &kp M  &kp COMMA  &kp PERIOD  &kp SLASH
                              &kp LCTRL  &kp LEFT_ALT  &lt 2 SPACE                                                    &lt 3 SPACE      &kp LEFT_META  &mo 4
            >;

            sensor-bindings = <&inc_dec_kp RIGHT_BRACKET LEFT_BRACKET>;
        };

        default_layer_mac {
            display-name = "Mac";
            bindings = <
&kp ESCAPE      &kp Q  &kp W  &kp E      &kp R          &kp T                               &kp UP_ARROW               &kp BACKSPACE    &kp Y         &kp U  &kp I      &kp O       &kp P
&kp TAB         &kp A  &kp S  &kp D      &kp F          &kp G                     &kp LEFT  &kp ENTER       &kp RIGHT  &kp ENTER        &kp H         &kp J  &kp K      &kp L       &kp SEMICOLON
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C      &kp V          &kp B        &kp SPACE              &kp DOWN_ARROW             &kp RIGHT_SHIFT  &kp N         &kp M  &kp COMMA  &kp PERIOD  &kp SLASH
                              &kp LCTRL  &kp LEFT_META  &lt 2 SPACE                                                    &lt 3 SPACE      &kp LEFT_ALT  &mo 4
            >;

            sensor-bindings = <&inc_dec_kp RIGHT_BRACKET LEFT_BRACKET>;
        };

        number_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                           &msc SCRL_UP                     &kp DEL  &kp N6          &kp NUMBER_7  &kp NUMBER_8  &kp N9     &kp NUMBER_0
&trans  &none   &none   &none   &none   &none            &msc SCRL_LEFT  &mkp RCLK       &msc SCRL_RIGHT  &trans   &kp LEFT_ARROW  &kp DOWN      &kp UP        &kp RIGHT  &trans
&trans  &none   &none   &none   &none   &none   &none                    &msc SCRL_DOWN                   &trans   &none           &none         &trans        &trans     &trans
                        &trans  &trans  &trans                                                            &trans   &trans          &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        symbol_layer {
            display-name = "SYMBOL";
            bindings = <
&kp GRAVE   &kp EXCL       &kp AT            &kp LS(NUMBER_3)  &kp DOLLAR  &kp PRCNT                    &trans          &trans  &kp CARET          &kp AMPS   &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&trans      &none          &kp LA(NUMBER_2)  &kp LA(NUMBER_3)  &none       &none                &trans  &trans  &trans  &trans  &kp SQT            &kp MINUS  &kp EQUAL     &kp LEFT_BRACKET      &kp RIGHT_BRACKET
&kp LSHIFT  &kp BACKSLASH  &none             &none             &none       &none      &trans            &trans          &trans  &kp DOUBLE_QUOTES  &kp UNDER  &kp PLUS      &kp LEFT_BRACE        &kp RIGHT_BRACE
                                             &trans            &trans      &trans                                       &trans  &trans             &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        function_layer {
            display-name = "Fn";
            bindings = <
&kp DEL   &kp F1          &kp F2           &kp F3           &kp F4         &kp F5                                &kp PAGE_UP             &kp F6      &kp F7        &kp F8         &kp F9      &kp F10   &kp F11
&kp CAPS  &kp SCROLLLOCK  &kp PRINTSCREEN  &kp PAUSE_BREAK  &kp INSERT     &kp C_MENU                  &kp HOME  &mkp MCLK      &kp END  &kp HOME    &kp HOME      &kp PAGE_DOWN  &kp PG_UP   &kp END   &kp F12
&none     &none           &none            &none            &kp C_BRI_DEC  &kp C_BRI_UP  &kp C_MUTE              &kp PAGE_DOWN           &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP   &kp C_PREV  &kp C_PP  &kp C_NEXT
                                           &trans           &trans         &trans                                                        &trans      &trans        &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        board_layer {
            display-name = "Board";
            bindings = <
&sys_reset       &bootloader      &studio_unlock   &out OUT_TOG     &to 0            &to 1                                          &kp PAGE_UP                     &trans           &trans           &out OUT_TOG     &studio_unlock   &bootloader  &sys_reset
&bt BT_CLR_ALL   &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                   &mmv MOVE_LEFT  &mkp MCLK      &mmv MOVE_RIGHT  &trans           &trans           &trans           &trans           &trans       &trans
&rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &kp C_MUTE                    &kp PAGE_DOWN                   &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_SPD  &rgb_ug RGB_SPI  &trans       &trans
                                                   &trans           &trans           &trans                                                                         &trans           &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        rgb_layer {
            bindings = <
&rgb_ug RGB_COLOR_HSB(0,100,50)  &rgb_ug RGB_COLOR_HSB(30,100,50)  &rgb_ug RGB_COLOR_HSB(60,100,50)  &rgb_ug RGB_COLOR_HSB(90,100,50)  &rgb_ug RGB_COLOR_HSB(120,100,50)  &rgb_ug RGB_COLOR_HSB(150,100,50)                             &rgb_ug RGB_BRI                   &rgb_ug RGB_COLOR_HSB(180,100,50)  &rgb_ug RGB_COLOR_HSB(210,100,50)  &rgb_ug RGB_COLOR_HSB(240,100,50)  &rgb_ug RGB_COLOR_HSB(270,100,50)  &rgb_ug RGB_COLOR_HSB(300,100,50)  &rgb_ug RGB_COLOR_HSB(330,100,50)
&rgb_ug RGB_COLOR_HSB(0,100,35)  &rgb_ug RGB_COLOR_HSB(30,100,35)  &rgb_ug RGB_COLOR_HSB(60,100,35)  &rgb_ug RGB_COLOR_HSB(90,100,35)  &rgb_ug RGB_COLOR_HSB(120,100,35)  &rgb_ug RGB_COLOR_HSB(150,100,35)            &rgb_ug RGB_SPD  &rgb_ug RGB_TOG  &rgb_ug RGB_SPI  &rgb_ug RGB_COLOR_HSB(180,100,35)  &rgb_ug RGB_COLOR_HSB(210,100,35)  &rgb_ug RGB_COLOR_HSB(240,100,35)  &rgb_ug RGB_COLOR_HSB(270,100,35)  &rgb_ug RGB_COLOR_HSB(300,100,35)  &rgb_ug RGB_COLOR_HSB(330,100,35)
&rgb_ug RGB_COLOR_HSB(0,100,15)  &rgb_ug RGB_COLOR_HSB(30,100,15)  &rgb_ug RGB_COLOR_HSB(60,100,15)  &rgb_ug RGB_COLOR_HSB(90,100,15)  &rgb_ug RGB_COLOR_HSB(120,100,15)  &rgb_ug RGB_COLOR_HSB(150,100,15)  &trans                     &rgb_ug RGB_BRD                   &rgb_ug RGB_COLOR_HSB(180,100,15)  &rgb_ug RGB_COLOR_HSB(210,100,15)  &rgb_ug RGB_COLOR_HSB(240,100,15)  &rgb_ug RGB_COLOR_HSB(270,100,15)  &rgb_ug RGB_COLOR_HSB(300,100,15)  &rgb_ug RGB_COLOR_HSB(330,100,15)
                                                                                                     &trans                            &trans                             &trans                                                                                          &rgb_ug RGB_EFF                    &rgb_ug RGB_HUD                    &rgb_ug RGB_SAI
            >;

            label = "RGB";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
