#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&soft_off { hold-time-ms = <2000>; };

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        softoff {
            bindings = <&soft_off>;
            key-positions = <1 15 29>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&lt 4 ESCAPE    &kp Q  &kp W  &kp E             &kp R  &kp T                                     &mmv MOVE_UP                     &kp Y        &kp U  &kp I         &kp O    &kp P     &lt 4 BACKSPACE
&kp TAB         &kp A  &kp S  &kp D             &kp F  &kp G                     &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp H        &kp J  &kp K         &kp L    &kp SEMI  &kp ENTER
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C             &kp V  &kp B        &kp SPACE                    &mmv MOVE_DOWN                   &kp N        &kp M  &kp COMMA     &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                              &kp LEFT_CONTROL  &mo 1  &lt 3 SPACE                                                                &lt 3 SPACE  &mo 2  &kp LEFT_ALT
            >;

            sensor-bindings = <&inc_dec_kp RIGHT_BRACKET LEFT_BRACKET>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans    &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                            &msc SCRL_UP                     &kp N6    &kp N7    &kp N8  &kp N9     &kp N0  &kp DELETE
&kp CAPS  &trans  &trans  &trans  &trans  &trans            &msc SCRL_LEFT  &mkp RCLK       &msc SCRL_RIGHT  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans    &trans  &trans  &trans  &trans  &trans  &trans                    &msc SCRL_DOWN                   &trans    &trans    &trans  &trans     &trans  &trans
                          &trans  &trans  &trans                                                             &kp INS   &kp DEL   &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&kp GRAVE  &kp EXCL      &kp AT        &kp HASH  &kp DLLR  &kp PRCNT                    &trans          &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp DELETE
&trans     &trans        &trans        &trans    &trans    &trans               &trans  &trans  &trans  &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&trans     &out OUT_USB  &out OUT_BLE  &trans    &trans    &trans     &trans            &trans          &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                       &trans    &trans    &kp SPACE                                    &kp RET    &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        function_layer {
            display-name = "Fn";
            bindings = <
&trans  &kp F1      &kp F2            &kp F3        &kp F4  &kp F5                          &kp PAGE_UP             &kp F6    &kp F7       &kp F8         &kp F9   &kp F10  &kp F11
&trans  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT    &trans  &trans                &kp HOME  &mkp MCLK      &kp END  &kp HOME  &kp PAGE_UP  &kp PAGE_DOWN  &kp END  &trans   &kp F12
&trans  &kp C_MUTE  &kp C_VOL_DN      &kp C_VOL_UP  &trans  &trans  &kp C_MUTE              &kp PAGE_DOWN           &trans    &trans       &trans         &trans   &trans   &trans
                                      &trans        &trans  &trans                                                  &trans    &trans       &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        board_layer {
            display-name = "Board";
            bindings = <
&trans           &trans           &trans           &trans           &trans        &trans                                        &kp PAGE_UP                     &trans           &trans           &trans           &trans           &trans           &trans
&bt BT_CLR_ALL   &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3  &bt BT_SEL 4                  &mmv MOVE_LEFT  &mkp MCLK      &mmv MOVE_RIGHT  &trans           &trans           &trans           &trans           &trans           &trans
&rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_SPD  &rgb_ug RGB_SPI  &trans        &trans          &kp C_MUTE                    &kp PAGE_DOWN                   &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI
                                                   &sys_reset       &bootloader   &studio_unlock                                                                &studio_unlock   &bootloader      &sys_reset
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
